package Assignment;

import processing.core.PApplet;

public class Ball extends Object
{
	//Fields for ball
	float br = 10;
	char reset;
	char newg;
	
	public Ball(PApplet papplet) 
	{
		super(papplet);
	}

	public Ball(char reset, char newg, float startx, float starty)
	{
		super(startx, starty);
		this.reset = reset;
		this.newg = newg;
	}
	@Override
	void position() 
	{
	    //If statement which indicates what happens when the ball hits off the paddle for Player
		if((pos.x >= recta - br) && (pos.x <= (recta - br) + w) &&(pos.y >= papplet.mouseY))
		{
			speedx = -speedx;
			papplet.stroke(7, 29, 103);
			papplet.fill(7, 29, 103);
		}
		
		//If statement so ball bounces off the walls
		if(pos.y > papplet.height - 20)
		{
			speedy = -speedy;
		}
		
	    //If statement so ball bounces off the walls
	    if(pos.y < 20)
	    {
	      speedy = -speedy;
	    }
	    
	    //If statement that decrements the Player 2 lives and resets the ball position
	    if(pos.x > papplet.width)
	    {
	      p_lives --;
	      reset();
	    }
	    
	    //If statement that decrements the Player 1 lives and resets the ball position
	    if(pos.x < br)
	    {
	      speedx = -speedx;
	    }
	    
	    /*
	    //If pressed the game will reset the ball position
	    if(keys[reset])
	    {
	      reset();
	    }
	    
	    //If pressed the game will start a new one
	    if(keys[newg])
	    {
	      newgame();
	    }
	    */
	    
	    //Increments the speed of the ball
	    pos.x = pos.x + speedx;
	    pos.y = pos.y + speedy;
		
	}

	@Override
	void thing() 
	{
	    papplet.pushMatrix();
	    papplet.translate(pos.x, pos.y);
	    papplet.stroke(7, 29, 103);
	    papplet.fill(7, 29, 103);
	    papplet.ellipse(0, 0, br * 2, br * 2);
	    papplet.popMatrix();
	    
	    papplet.fill(7, 29, 103);
	    papplet.textSize(30);
	    papplet.text("Player:  " + p_lives, 600, 40);		
	}
	
	  //Method to reset the position of the ball when it goes passed the walls
	  void reset()
	  {
	    pos.x = papplet.random(100, 900);
	    pos.y = papplet.random(0, papplet.height);
	    br = 10;
	  }
	  
	  //Method to restart the game with new lives and new positions
	  void newgame()
	  {
	    speedx = 8;
	    speedy = 8;
	    p_lives = 5;
	    pos.x = papplet.random(100, 900);
	    pos.y = papplet.random(0, papplet.height);
	    br = 10;
	  }

}
